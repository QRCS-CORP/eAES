
/* 2024 Quantum Resistant Cryptographic Solutions Corporation
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Quantum Resistant Cryptographic Solutions Incorporated.
 * The intellectual and technical concepts contained
 * herein are proprietary to Quantum Resistant Cryptographic Solutions Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Quantum Resistant Cryptographic Solutions Incorporated.
 *
 * Written by John G. Underhill
 * Contact: develop@qrcs.ca
 */

#ifndef QSCTEST_SHA3_TEST_H
#define QSCTEST_SHA3_TEST_H
/**
* \file sha3_test.h
* \brief <b>SHA3 Known Answer Tests</b> \n
* Uses Known Answer Tests from official sources to utils_integer_verify the
* correct operation of SHA3 digest and SHAKE implementations.
* \author John Underhill
* \date December 28, 2017
*/

#include "common.h"

/**
* \brief Tests the 256-bit version of the cSHAKE function for correct operation,
* using the NIST vectors.
*
* \return Returns true for success
*
* \remarks <b>References:</b> \n
* NIST: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/cSHAKE_samples.pdf">cSHAKE example values</a> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a>
*/
bool qsctest_cshake_256_kat(void);

/**
* \brief Tests the 512-bit version of the cSHAKE function for correct operation,
* using the NIST vectors.
*
* \return Returns true for success
*
* \remarks <b>References:</b> \n
* KATs generated by the CEX C++ cryptographic Library: <a href="https://github.com/Steppenwolfe65/CEX">CEX</a> \n
*/
bool qsctest_cshake_512_kat(void);

/**
* \brief Tests the 256-bit version of the KMAC function for correct operation,
* using selected vectors from the NIST reference package.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a> \n
* NIST: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/KMAC_samples.pdf">KMAC example values</a>
*/
bool qsctest_kmac_256_kat(void);

/**
* \brief Tests the 512-bit version of the KMAC function for correct operation,
* using selected vectors from the NIST reference package.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* KATs generated by the CEX C++ cryptographic Library: <a href="https://github.com/Steppenwolfe65/CEX">CEX</a> \n
*/
bool qsctest_kmac_512_kat(void);

/**
* \brief Run all tests.
*/
void qsctest_sha3_run(void);

#endif
